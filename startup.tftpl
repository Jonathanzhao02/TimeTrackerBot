#!/bin/bash

/usr/bin/logger "== Startup script START =="

# Update APT
sudo apt-get update
sudo apt-get install -y ca-certificates curl

# Add cloudflared
sudo mkdir -p --mode=0755 /usr/share/keyrings
curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null

# Add the repositories to Apt sources:
echo "deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared $(lsb_release -cs) main" | \
  sudo tee /etc/apt/sources.list.d/cloudflared.list
sudo apt-get update

sudo apt-get install -y cloudflared wireguard nginx libnginx-mod-stream

/usr/bin/logger "== Nginx setup START =="

# Configure nginx
sudo rm /etc/nginx/sites-enabled/default

cat <<EOF | sudo tee -a /etc/nginx/nginx.conf
stream {
    server {
        listen *:25565-25566;

        proxy_pass 10.100.100.1:\$server_port;
    }
}
EOF

sudo /etc/init.d/nginx reload

/usr/bin/logger "== Nginx setup END =="

/usr/bin/logger "== Cloudflared setup START =="

# Setup authenticaton and configuration of tunnel
sudo mkdir -p /etc/cloudflared/

cat <<EOF | sudo tee /etc/cloudflared/cert.json
{
  "AccountTag"   : "${account_id}",
  "TunnelID"     : "${tunnel_id}",
  "TunnelSecret" : "${secret}"
}
EOF

cat <<EOF | sudo tee /etc/cloudflared/config.yml
tunnel: ${tunnel_id}
credentials-file: /etc/cloudflared/cert.json
logfile: /var/log/cloudflared.log
loglevel: info

ingress:
  - hostname: ${ssh_domain}
    service: ssh://localhost:22
  - service: http_status:404
EOF

# Setup background services
sudo cloudflared --config /etc/cloudflared/config.yml service install
sudo systemctl enable cloudflared
sudo systemctl enable cloudflared-update.timer
sudo systemctl start cloudflared
sudo systemctl start cloudflared-update.timer

/usr/bin/logger "== Cloudflared setup END =="

/usr/bin/logger "== Dynamic DNS setup START =="

# DDNS script
cat << EOF | sudo tee /usr/local/bin/update-ddns.sh
#!/bin/bash

# A bash script to update a Cloudflare DNS A record with the external IP of the source machine
# Used to provide DDNS service

# Get the current external IP address
ip=$(curl -s -X GET https://checkip.amazonaws.com)

echo "Current IP is \$ip"

if host ${ddns_name} 1.1.1.1 | grep "has address" | grep "\$ip"; then
  echo "${ddns_name} is currently set to \$ip; no changes needed"
  exit
fi

# if here, the dns record needs updating

# update the record
curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${zone_id}/dns_records/${ddns_record_id}" \
  -H "Authorization: Bearer ${ddns_token}" \
  -H "Content-Type: application/json" \
  --data "{\"type\":\"A\",\"name\":\"${ddns_name}\",\"content\":\"\$ip\",\"ttl\":1,\"proxied\":false}"
EOF

sudo chmod +x /usr/local/bin/update-ddns.sh

# Schedule DDNS update every hour
(sudo crontab -l 2>/dev/null; echo "0 * * * * /usr/local/bin/update-ddns.sh | tee -a /var/log/ddns.log") | sudo crontab -

# Do one update
/usr/local/bin/update-ddns.sh

/usr/bin/logger "== Dynamic DNS setup END =="

/usr/bin/logger "== Wireguard setup START =="

sudo mkdir -p /etc/wireguard

cat <<EOF | sudo tee /etc/wireguard/wg0.conf
[Interface]
PrivateKey = ${wg_privkey}
Address = ${wg_addr}
ListenPort = 51820

[Peer]
PublicKey = ${wg_pubkey}
AllowedIPs = ${wg_allowed_ips}
Endpoint = ${wg_endpoint}
PersistentKeepalive = ${wg_keepalive}
EOF

wg-quick up wg0

/usr/bin/logger "== Wireguard setup END =="

/usr/bin/logger "== Startup script END =="
